// Code generated by gomacro; DO NOT EDIT.
package messages

import "github.com/tdakkota/cursor"

func (m PlayerNPCTeleport) Append(cur *cursor.Cursor) (err error) {
	{
		err := cur.WriteUint8(uint8(m.Flags))
		if err != nil {
			return err
		}
	}
	{
		err := cur.WriteInt16(m.TargetID)
		if err != nil {
			return err
		}
	}
	{
		err := cur.WriteFloat32(m.X)
		if err != nil {
			return err
		}
	}
	{
		err := cur.WriteFloat32(m.Y)
		if err != nil {
			return err
		}
	}
	{
		err := cur.WriteUint8(m.Style)
		if err != nil {
			return err
		}
	}
	if m.Flags&PlayerNPCTeleportFlagsHasExtraInfo !=
		0 {
		{
			err := cur.WriteInt32(m.ExtraInfo)
			if err != nil {
				return err
			}
		}
	}
	return nil
}
func (m *PlayerNPCTeleport) Scan(cur *cursor.Cursor) (err error) {
	{
		tmp, err := cur.ReadUint8()
		if err != nil {
			return err
		}
		m.Flags = PlayerNPCTeleportFlags(tmp)
	}
	{
		tmp, err := cur.ReadInt16()
		if err != nil {
			return err
		}
		m.TargetID = tmp
	}
	{
		tmp, err := cur.ReadFloat32()
		if err != nil {
			return err
		}
		m.X = tmp
	}
	{
		tmp, err := cur.ReadFloat32()
		if err != nil {
			return err
		}
		m.Y = tmp
	}
	{
		tmp, err := cur.ReadUint8()
		if err != nil {
			return err
		}
		m.Style = tmp
	}
	if m.Flags&PlayerNPCTeleportFlagsHasExtraInfo !=
		0 {
		{
			tmp, err := cur.ReadInt32()
			if err != nil {
				return err
			}
			m.ExtraInfo = tmp
		}
	}
	return nil
}
