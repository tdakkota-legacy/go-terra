// Code generated by gomacro; DO NOT EDIT.
package messages

import "github.com/tdakkota/cursor"

func (m UpdateTileEntity) Append(cur *cursor.Cursor) (err error) {
	{
		err := cur.WriteInt32(m.TileEntityId)
		if err != nil {
			return err
		}
	}
	{
		err := cur.WriteBool(m.UpdateTileFlag)
		if err != nil {
			return err
		}
	}
	if m.UpdateTileFlag {
		{
			err := cur.WriteUint8(m.TileEntityType)
			if err != nil {
				return err
			}
		}
	}
	if m.UpdateTileFlag {
		{
			err := cur.WriteInt16(m.X)
			if err != nil {
				return err
			}
		}
	}
	if m.UpdateTileFlag {
		{
			err := cur.WriteInt16(m.Y)
			if err != nil {
				return err
			}
		}
	}
	return nil
}
func (m *UpdateTileEntity) Scan(cur *cursor.Cursor) (err error) {
	{
		tmp, err := cur.ReadInt32()
		if err != nil {
			return err
		}
		m.TileEntityId = tmp
	}
	{
		tmp, err := cur.ReadBool()
		if err != nil {
			return err
		}
		m.UpdateTileFlag = tmp
	}
	if m.UpdateTileFlag {
		{
			tmp, err := cur.ReadUint8()
			if err != nil {
				return err
			}
			m.TileEntityType = tmp
		}
	}
	if m.UpdateTileFlag {
		{
			tmp, err := cur.ReadInt16()
			if err != nil {
				return err
			}
			m.X = tmp
		}
	}
	if m.UpdateTileFlag {
		{
			tmp, err := cur.ReadInt16()
			if err != nil {
				return err
			}
			m.Y = tmp
		}
	}
	return nil
}
